repeat task.wait() until game:IsLoaded()
print("üå™Ô∏è CTHub SuperCleaner v14 kh·ªüi ƒë·ªông... (Full: Farm, Plants, Pet, Mutation, Trait, Weather, Pop)")

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local Lighting = game:GetService("Lighting")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer

local FarmFolder = Workspace:WaitForChild("Farm")
local PetsFolder = Workspace:FindFirstChild("PetsPhysical")
local Terrain = Workspace:FindFirstChild("Terrain")
local WeatherVisuals = Workspace:FindFirstChild("WeatherVisuals")

--------------------------------------------------------
-- üß± Safe destroy
--------------------------------------------------------
local function safeDestroy(obj)
	pcall(function()
		if obj and obj.Parent then obj:Destroy() end
	end)
end

--------------------------------------------------------
-- üåæ T√¨m farm c·ªßa b·∫°n
--------------------------------------------------------
local function getMyFarm()
	for _, farm in ipairs(FarmFolder:GetChildren()) do
		local imp = farm:FindFirstChild("Important")
		if imp and imp:FindFirstChild("Data") then
			local data = imp.Data
			local owner = data:FindFirstChild("Owner")
			if owner and (owner.Value == LocalPlayer or tostring(owner.Value) == LocalPlayer.Name) then
				return farm
			end
		end
	end
	return nil
end

--------------------------------------------------------
-- üí® Xo√° effect (Particle/Beam/Fire/Smoke/etc)
--------------------------------------------------------
local function clearEffectsIn(obj)
	for _, v in ipairs(obj:GetDescendants()) do
		if v:IsA("ParticleEmitter") or v:IsA("Trail") or v:IsA("Beam")
			or v:IsA("Smoke") or v:IsA("Fire") or v:IsA("Explosion")
			or v:IsA("Sparkles") then
			safeDestroy(v)
		end
	end
end

--------------------------------------------------------
-- ‚öóÔ∏è Mutation Effect List
--------------------------------------------------------
local mutationKeywords = {
	"Rainbow","Golden","Shiny","Radiant","Soulflame","Spectral","Frozen",
	"Corrupted","Aromatic","Windy","Mega","Tiny","Inverted","IronSkin",
	"Ascended","Tranquil","Fried","Dreadbound","Nightmare","Luminous","Glimmering"
}

local function clearMutationVisuals(pet)
	for _, v in ipairs(pet:GetDescendants()) do
		for _, keyword in ipairs(mutationKeywords) do
			if string.find(string.lower(v.Name), string.lower(keyword)) then
				safeDestroy(v)
			end
		end
	end
end

--------------------------------------------------------
-- üß© Trait Groups (from PetTraitsData)
--------------------------------------------------------
local traitGroups = {
	Dinosaur = {"Raptor","Triceratops","T-Rex","Spinosaurus","Brontosaurus"},
	Food = {"Bagel Bunny","Sushi Bear","Bacon Pig","Hotdog Daschund","Lobster Thermidor"},
	Fall = {"Red Panda","Robin","Grizzly Bear","Squirrel","Woodpecker"},
	Halloween = {"Bat","Ghost","Reaper","Pumpkin","Lich","Dark Spriggan","Spider","Crow","Goblin"}
}

local function clearTraitVisuals(pet)
	for _, v in ipairs(pet:GetDescendants()) do
		for trait, list in pairs(traitGroups) do
			for _, petName in ipairs(list) do
				if string.find(string.lower(v.Name), string.lower(petName))
					or string.find(string.lower(v.Name), string.lower(trait)) then
					safeDestroy(v)
				end
			end
		end
	end
end

--------------------------------------------------------
-- üå©Ô∏è Xo√° th·ªùi ti·∫øt v√† pop effect + files
--------------------------------------------------------
local function clearWeatherAndTerrain()
	local targets = {
		Terrain:FindFirstChild("BigPopEffect"),
		Terrain:FindFirstChild("MediumPopEffect"),
		Terrain:FindFirstChild("PopEffect"),
		WeatherVisuals
	}
	for _, fx in ipairs(targets) do
		if fx then safeDestroy(fx) end
	end

	local weatherFolders = {
		Workspace:FindFirstChild("WeatherFiles"),
		Workspace:FindFirstChild("Weather"),
		ReplicatedStorage:FindFirstChild("WeatherFiles"),
		ReplicatedStorage:FindFirstChild("WeatherAssets"),
		ReplicatedStorage:FindFirstChild("WeatherPresets"),
		Lighting:FindFirstChild("WeatherFiles"),
		Terrain:FindFirstChild("WeatherFiles"),
	}
	for _, folder in ipairs(weatherFolders) do
		if folder then
			for _, obj in ipairs(folder:GetChildren()) do
				safeDestroy(obj)
			end
			safeDestroy(folder)
		end
	end

	for _, obj in ipairs(Terrain:GetDescendants()) do
		local n = string.lower(obj.Name)
		if n:find("rain") or n:find("fog") or n:find("snow")
		or n:find("lightning") or n:find("storm") or n:find("pop")
		or n:find("weather") or obj:IsA("ParticleEmitter")
		or obj:IsA("Beam") or obj:IsA("Trail") then
			safeDestroy(obj)
		end
	end
end

--------------------------------------------------------
-- üß† Smart whitelist pet c·ªßa b·∫°n
--------------------------------------------------------
local function findMyPetsWhitelist(myFarm)
	local whitelist = {}
	local farmPivot = nil
	pcall(function() farmPivot = myFarm:GetPivot().Position end)

	if PetsFolder then
		for _, petFolder in ipairs(PetsFolder:GetChildren()) do
			for _, pet in ipairs(petFolder:GetChildren()) do
				local petPos
				pcall(function()
					if pet.PrimaryPart then petPos = pet.PrimaryPart.Position
					elseif pet:IsA("Part") then petPos = pet.Position end
				end)
				if petPos and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
					local playerPos = LocalPlayer.Character.HumanoidRootPart.Position
					local distToPlayer = (playerPos - petPos).Magnitude
					local distToFarm = farmPivot and (farmPivot - petPos).Magnitude or math.huge
					if distToPlayer < 120 or distToFarm < 120 then
						table.insert(whitelist, pet)
						table.insert(whitelist, petFolder)
					end
				end
			end
		end
	end
	return whitelist
end

--------------------------------------------------------
-- üêæ Xo√° pet ng∆∞·ªùi kh√°c + mutation + trait effect
--------------------------------------------------------
local function clearOtherPets(myFarm)
	if not PetsFolder then return end
	local keepList = findMyPetsWhitelist(myFarm)

	for _, petFolder in ipairs(PetsFolder:GetChildren()) do
		local isMine = false
		for _, keep in ipairs(keepList) do
			if petFolder == keep or petFolder:IsDescendantOf(keep) then
				isMine = true
				break
			end
		end
		if isMine then
			clearEffectsIn(petFolder)
			clearMutationVisuals(petFolder)
			clearTraitVisuals(petFolder)
		else
			safeDestroy(petFolder)
		end
	end
end

--------------------------------------------------------
-- ü•ö Xo√° tr·ª©ng ·ªü farm kh√°c
--------------------------------------------------------
local function clearOtherEggs(myFarm)
	for _, farm in ipairs(FarmFolder:GetChildren()) do
		local imp = farm:FindFirstChild("Important")
		if imp and imp:FindFirstChild("Objects_Physical") then
			local obj = imp.Objects_Physical
			local egg = obj:FindFirstChild("PetEgg")
			if egg then
				if farm == myFarm then
					clearEffectsIn(egg)
				else
					safeDestroy(egg)
				end
			end
		end
	end
end

--------------------------------------------------------
-- üå± Xo√° c√¢y (Plants_Physical) c·ªßa farm kh√°c
--------------------------------------------------------
local function clearOtherFarmsPlants(myFarm)
	for _, farm in ipairs(FarmFolder:GetChildren()) do
		if farm ~= myFarm then
			local imp = farm:FindFirstChild("Important")
			if imp and imp:FindFirstChild("Plants_Physical") then
				for _, plantType in ipairs(imp.Plants_Physical:GetChildren()) do
					for _, plant in ipairs(plantType:GetChildren()) do
						safeDestroy(plant)
					end
				end
			end
		end
	end
end

--------------------------------------------------------
-- üè° Xo√° to√†n b·ªô farm ng∆∞·ªùi kh√°c
--------------------------------------------------------
local function clearOtherFarms(myFarm)
	for _, farm in ipairs(FarmFolder:GetChildren()) do
		if farm ~= myFarm then
			safeDestroy(farm)
		end
	end
end

--------------------------------------------------------
-- üé® Gi·∫£m ƒë·ªì ho·∫° c·ª±c m·∫°nh
--------------------------------------------------------
local function reduceGraphics()
	pcall(function()
		settings():GetService("RenderSettings").QualityLevel = Enum.QualityLevel.Level01
	end)
	pcall(function()
		Lighting.GlobalShadows = false
		Lighting.EnvironmentDiffuseScale = 0
		Lighting.EnvironmentSpecularScale = 0
		Lighting.Brightness = 1
		Lighting.FogStart = 1e5
		Lighting.FogEnd = 1e6
		for _, eff in ipairs(Lighting:GetChildren()) do
			if eff:IsA("BloomEffect") or eff:IsA("SunRaysEffect")
				or eff:IsA("DepthOfFieldEffect") or eff:IsA("BlurEffect")
				or eff:IsA("ColorCorrectionEffect") then
				safeDestroy(eff)
			end
		end
	end)
end

--------------------------------------------------------
-- üîÅ D·ªçn realtime m·ªói 5 gi√¢y
--------------------------------------------------------
task.spawn(function()
	while task.wait(5) do
		local myFarm = getMyFarm()
		reduceGraphics()
		clearWeatherAndTerrain()
		if myFarm then
			clearOtherFarmsPlants(myFarm)
			clearOtherFarms(myFarm)
			clearOtherPets(myFarm)
			clearOtherEggs(myFarm)
			clearEffectsIn(myFarm)
		end
	end
end)

--------------------------------------------------------
-- üèÅ Ch·∫°y 1 l·∫ßn khi load
--------------------------------------------------------
local myFarm = getMyFarm()
reduceGraphics()
clearWeatherAndTerrain()
if myFarm then
	clearOtherFarmsPlants(myFarm)
	clearOtherFarms(myFarm)
	clearOtherPets(myFarm)
	clearOtherEggs(myFarm)
	clearEffectsIn(myFarm)
end

print("‚úÖ CTHub SuperCleaner v14: Gi·ªØ farm b·∫°n, xo√° to√†n b·ªô farm, c√¢y, pet, weather, mutation & trait ng∆∞·ªùi kh√°c.")
